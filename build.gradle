plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'idea'
}

group 'org.game'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

defaultTasks 'bootRun'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'mysql:mysql-connector-java'
    testImplementation 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation ("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    /**
     * JUnit Jupiter as a testing framework.
     */
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'

    /**
     * JUnit Jupiter parameter configuration.
     */
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.6.0'

    /**
     * JUnit Jupiter testing engine.
     */
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'

    /**
     * Vintage platform engine.
     */
    testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.2.0'

    /**
     * JUnit jupiter with mockito.
     */
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.19.0'

    /**
     * Mockito for mocking.
     */
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.19.0'

}
sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    integrationTestImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
}

task integrationTest(type: Test) {
    description = 'Integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    outputs.upToDateWhen { false } // other way: inputs.upToDateWhen { false }

    mustRunAfter test
}

check.dependsOn integrationTest
task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}
task integrationTestReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn integrationTest
}

